import tkinter
from tkinter import *
import tkinter.messagebox as msgbox

from Libs.Machine import VendingMachine

root = Tk()
root.title("Vending Machine")
root.geometry("1400x700")
root.resizable(False,False)

m = VendingMachine(['아이시스 8.0', '아이시스 8.0', '2% 아쿠아 제로', '레몬워터', '레몬워터', '옥수수 수염차', '옥수수 수염차', '옥수수 수염차', '트레비','트레비', '펩시 제로', '펩시', '칠성사이다 제로', '칠성사이다', '망고', '망고', 'Liptea 복숭아', '스퀴즈 사과에이드', '스퀴즈 사과에이드', '스퀴즈 포도에이드', '가나초코', '레쓰비', '핫6 제로', '밀키스','핫6', '레쓰비 카페타임', '게토레이 레몬향', '게토레이 레몬향', '코코 포도', '잔치집 식혜']
                       ,[800, 800, 2000, 1800, 1800, 1600, 1600, 2200, 1300, 1300, 1100, 1100, 1300, 1300, 1200, 1200, 1200, 1100, 1100, 1100, 900, 900, 1300, 1100, 1300, 1200, 1000, 1000, 1000, 1000]
                       ,[10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10])
cash = [20,20,20,20] #사용자가 가지고 있는 현금
items=[]
def __init__():
    global items,m
    #
    # for i in range(0,30):
    #     temp = m.get_item_info(i)
    #     items.append({'name':temp[0],'price':temp[1],'count':temp[2]}) #name, price, count

def get_password():
    global editing

    def comfirm():
        global editing
        in_password = txt.get()
        login_window.destroy()
        if m.login(in_password): #비밀번호 맞음?
            editing=True #관리자 권한 있음
            admin_page() #관리자 페이지 들어가기
        #print(in_password,editing)
        editing=False #관리자 권한 없음

    login_window = tkinter.Toplevel(root)
    login_window.title("관리자 로그인")
    login_window.geometry("300x80")
    login_window.resizable(False,False)
    login_info = tkinter.Label(login_window,text="비밀번호를 입력해 주세요.")
    login_info.pack()

    txt = Entry(login_window, width=30) #textbox로 입력받기.
    txt.pack()

    check_button = Button(login_window,text="확인",command=comfirm,width=8,height=1)
    check_button.pack()

####################### 관리자 페이지
editing = False
def admin_page():
    admin_windows = tkinter.Toplevel(root)
    admin_windows.title("관리자 페이지")
    admin_windows.geometry("700x1100")
    admin_windows.resizable(False,True)
    # Create canvas + scrollbar
    canvas = Canvas(admin_windows, width=680, height=700)
    scrollbar = Scrollbar(admin_windows, orient="vertical", command=canvas.yview)
    canvas.configure(yscrollcommand=scrollbar.set)

    scrollbar.pack(side=RIGHT, fill=Y)
    canvas.pack(side=LEFT, fill=BOTH, expand=True)

    admin_window = Frame(canvas)
    admin_window.bind(
        "<Configure>", #<Configure> 이벤트는 scrollable_frame의 크기(너비/높이)가 바뀔 때마다 발생.
        lambda e: canvas.configure(scrollregion=canvas.bbox("all")) #스크롤 영역 자동 갱신
    )
    canvas.create_window((0, 0), window=admin_window, anchor="nw") #캔버스 어디다 소환하꺼야 -> (0,0)왼쪽 위에 소환할거야
    #스크롤바 넣기: https://toypapa.tistory.com/entry/Python-Tkinter-Scroll-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EC%82%AC%EC%9A%A9%EB%B2%95

    #Columns
    def adm_draw_column():
        column_name = Label(admin_window,text="제품 이름",width=20,height=1)
        column_name.grid(row=1,column=2)

        column_price = Label(admin_window, text="제품 가격",width=20,height=1)
        column_price.grid(row=1, column=5)

        column_count = Label(admin_window, text="제품 수량",width=20,height=1)
        column_count.grid(row=1, column=7)
    adm_draw_column()
    #Index
    def adm_draw_index():
        ind1 = Label(admin_window, text="1.", width=2, height=1)
        ind1.grid(row=2, column=1)
        ind2 = Label(admin_window, text="2.", width=2, height=1)
        ind2.grid(row=3, column=1)
        ind3 = Label(admin_window, text="3.", width=2, height=1)
        ind3.grid(row=4, column=1)
        ind4 = Label(admin_window, text="4.", width=2, height=1)
        ind4.grid(row=5, column=1)
        ind5 = Label(admin_window, text="5.", width=2, height=1)
        ind5.grid(row=6, column=1)
        ind6 = Label(admin_window, text="6.", width=2, height=1)
        ind6.grid(row=7, column=1)
        ind7 = Label(admin_window, text="7.", width=2, height=1)
        ind7.grid(row=8, column=1)
        ind8 = Label(admin_window, text="8.", width=2, height=1)
        ind8.grid(row=9, column=1)
        ind9 = Label(admin_window, text="9.", width=2, height=1)
        ind9.grid(row=10, column=1)
        ind10 = Label(admin_window, text="10.", width=2, height=1)
        ind10.grid(row=11, column=1)
        ind11 = Label(admin_window, text="11.", width=2, height=1)
        ind11.grid(row=12, column=1)
        ind12 = Label(admin_window, text="12.", width=2, height=1)
        ind12.grid(row=13, column=1)
        ind13 = Label(admin_window, text="13.", width=2, height=1)
        ind13.grid(row=14, column=1)
        ind14 = Label(admin_window, text="14.", width=2, height=1)
        ind14.grid(row=15, column=1)
        ind15 = Label(admin_window, text="15.", width=2, height=1)
        ind15.grid(row=16, column=1)
        ind16 = Label(admin_window, text="16.", width=2, height=1)
        ind16.grid(row=17, column=1)
        ind17 = Label(admin_window, text="17.", width=2, height=1)
        ind17.grid(row=18, column=1)
        ind18 = Label(admin_window, text="18.", width=2, height=1)
        ind18.grid(row=19, column=1)
        ind19 = Label(admin_window, text="19.", width=2, height=1)
        ind19.grid(row=20, column=1)
        ind20 = Label(admin_window, text="20.", width=2, height=1)
        ind20.grid(row=21, column=1)
        ind21 = Label(admin_window, text="21.", width=2, height=1)
        ind21.grid(row=22, column=1)
        ind22 = Label(admin_window, text="22.", width=2, height=1)
        ind22.grid(row=23, column=1)
        ind23 = Label(admin_window, text="23.", width=2, height=1)
        ind23.grid(row=24, column=1)
        ind24 = Label(admin_window, text="24.", width=2, height=1)
        ind24.grid(row=25, column=1)
        ind25 = Label(admin_window, text="25.", width=2, height=1)
        ind25.grid(row=26, column=1)
        ind26 = Label(admin_window, text="26.", width=2, height=1)
        ind26.grid(row=27, column=1)
        ind27 = Label(admin_window, text="27.", width=2, height=1)
        ind27.grid(row=28, column=1)
        ind28 = Label(admin_window, text="28.", width=2, height=1)
        ind28.grid(row=29, column=1)
        ind29 = Label(admin_window, text="29.", width=2, height=1)
        ind29.grid(row=30, column=1)
        ind30 = Label(admin_window, text="30.", width=2, height=1)
        ind30.grid(row=31, column=1)
    adm_draw_index()
    #Names
    def adm_draw_name():
        #입력창 그리기
        name1 = Entry(admin_window, width=15)
        name1.grid(row=2, column=2)
        name1.insert(END, m.items_list[0])
        name2 = Entry(admin_window, width=15)
        name2.grid(row=3, column=2)
        name2.insert(END, m.items_list[1])
        name3 = Entry(admin_window, width=15)
        name3.grid(row=4, column=2)
        name3.insert(END, m.items_list[2])
        name4 = Entry(admin_window, width=15)
        name4.grid(row=5, column=2)
        name4.insert(END, m.items_list[3])
        name5 = Entry(admin_window, width=15)
        name5.grid(row=6, column=2)
        name5.insert(END, m.items_list[4])
        name6 = Entry(admin_window, width=15)
        name6.grid(row=7, column=2)
        name6.insert(END, m.items_list[5])
        name7 = Entry(admin_window, width=15)
        name7.grid(row=8, column=2)
        name7.insert(END, m.items_list[6])
        name8 = Entry(admin_window, width=15)
        name8.grid(row=9, column=2)
        name8.insert(END, m.items_list[7])
        name9 = Entry(admin_window, width=15)
        name9.grid(row=10, column=2)
        name9.insert(END, m.items_list[8])
        name10 = Entry(admin_window, width=15)
        name10.grid(row=11, column=2)
        name10.insert(END, m.items_list[9])
        name11 = Entry(admin_window, width=15)
        name11.grid(row=12, column=2)
        name11.insert(END, m.items_list[10])
        name12 = Entry(admin_window, width=15)
        name12.grid(row=13, column=2)
        name12.insert(END, m.items_list[11])
        name13 = Entry(admin_window, width=15)
        name13.grid(row=14, column=2)
        name13.insert(END, m.items_list[12])
        name14 = Entry(admin_window, width=15)
        name14.grid(row=15, column=2)
        name14.insert(END, m.items_list[13])
        name15 = Entry(admin_window, width=15)
        name15.grid(row=16, column=2)
        name15.insert(END, m.items_list[14])
        name16 = Entry(admin_window, width=15)
        name16.grid(row=17, column=2)
        name16.insert(END, m.items_list[15])
        name17 = Entry(admin_window, width=15)
        name17.grid(row=18, column=2)
        name17.insert(END, m.items_list[16])
        name18 = Entry(admin_window, width=15)
        name18.grid(row=19, column=2)
        name18.insert(END, m.items_list[17])
        name19 = Entry(admin_window, width=15)
        name19.grid(row=20, column=2)
        name19.insert(END, m.items_list[18])
        name20 = Entry(admin_window, width=15)
        name20.grid(row=21, column=2)
        name20.insert(END, m.items_list[19])
        name21 = Entry(admin_window, width=15)
        name21.grid(row=22, column=2)
        name21.insert(END, m.items_list[20])
        name22 = Entry(admin_window, width=15)
        name22.grid(row=23, column=2)
        name22.insert(END, m.items_list[21])
        name23 = Entry(admin_window, width=15)
        name23.grid(row=24, column=2)
        name23.insert(END, m.items_list[22])
        name24 = Entry(admin_window, width=15)
        name24.grid(row=25, column=2)
        name24.insert(END, m.items_list[23])
        name25 = Entry(admin_window, width=15)
        name25.grid(row=26, column=2)
        name25.insert(END, m.items_list[24])
        name26 = Entry(admin_window, width=15)
        name26.grid(row=27, column=2)
        name26.insert(END, m.items_list[25])
        name27 = Entry(admin_window, width=15)
        name27.grid(row=28, column=2)
        name27.insert(END, m.items_list[26])
        name28 = Entry(admin_window, width=15)
        name28.grid(row=29, column=2)
        name28.insert(END, m.items_list[27])
        name29 = Entry(admin_window, width=15)
        name29.grid(row=30, column=2)
        name29.insert(END, m.items_list[28])
        name30 = Entry(admin_window, width=15)
        name30.grid(row=31, column=2)
        name30.insert(END, m.items_list[29])
        def act_name(index,name):
            print(f'change {m.items_list[index]} to {name}')
            m.change_name(index,name)
            draw_btn()
        conf_column=3
        conf1 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(0, name1.get())))
        conf1.grid(row=2, column=conf_column)
        conf2 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(1, name2.get())))
        conf2.grid(row=3, column=conf_column)
        conf3 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(2, name3.get())))
        conf3.grid(row=4, column=conf_column)
        conf4 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(3, name4.get())))
        conf4.grid(row=5, column=conf_column)
        conf5 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(4, name5.get())))
        conf5.grid(row=6, column=conf_column)
        conf6 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(5, name6.get())))
        conf6.grid(row=7, column=conf_column)
        conf7 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(6, name7.get())))
        conf7.grid(row=8, column=conf_column)
        conf8 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(7, name8.get())))
        conf8.grid(row=9, column=conf_column)
        conf9 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(8, name9.get())))
        conf9.grid(row=10, column=conf_column)
        conf10 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(9, name10.get())))
        conf10.grid(row=11, column=conf_column)
        conf11 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(10, name11.get())))
        conf11.grid(row=12, column=conf_column)
        conf12 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(11, name12.get())))
        conf12.grid(row=13, column=conf_column)
        conf13 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(12, name13.get())))
        conf13.grid(row=14, column=conf_column)
        conf14 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(13, name14.get())))
        conf14.grid(row=15, column=conf_column)
        conf15 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(14, name15.get())))
        conf15.grid(row=16, column=conf_column)
        conf16 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(15, name16.get())))
        conf16.grid(row=17, column=conf_column)
        conf17 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(16, name17.get())))
        conf17.grid(row=18, column=conf_column)
        conf18 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(17, name18.get())))
        conf18.grid(row=19, column=conf_column)
        conf19 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(18, name19.get())))
        conf19.grid(row=20, column=conf_column)
        conf20 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(19, name20.get())))
        conf20.grid(row=21, column=conf_column)
        conf21 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(20, name21.get())))
        conf21.grid(row=22, column=conf_column)
        conf22 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(21, name22.get())))
        conf22.grid(row=23, column=conf_column)
        conf23 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(22, name23.get())))
        conf23.grid(row=24, column=conf_column)
        conf24 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(23, name24.get())))
        conf24.grid(row=25, column=conf_column)
        conf25 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(24, name25.get())))
        conf25.grid(row=26, column=conf_column)
        conf26 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(25, name26.get())))
        conf26.grid(row=27, column=conf_column)
        conf27 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(26, name27.get())))
        conf27.grid(row=28, column=conf_column)
        conf28 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(27, name28.get())))
        conf28.grid(row=29, column=conf_column)
        conf29 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(28, name29.get())))
        conf29.grid(row=30, column=conf_column)
        conf30 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_name(29, name30.get())))
        conf30.grid(row=31, column=conf_column)
    adm_draw_name()
    #Prices
    def adm_draw_price():
        #입력창 그리기
        pri1 = Entry(admin_window, width=15)
        pri1.grid(row=2, column=5)
        pri1.insert(END, m.items_price[0])
        pri2 = Entry(admin_window, width=15)
        pri2.grid(row=3, column=5)
        pri2.insert(END, m.items_price[1])
        pri3 = Entry(admin_window, width=15)
        pri3.grid(row=4, column=5)
        pri3.insert(END, m.items_price[2])
        pri4 = Entry(admin_window, width=15)
        pri4.grid(row=5, column=5)
        pri4.insert(END, m.items_price[3])
        pri5 = Entry(admin_window, width=15)
        pri5.grid(row=6, column=5)
        pri5.insert(END, m.items_price[4])
        pri6 = Entry(admin_window, width=15)
        pri6.grid(row=7, column=5)
        pri6.insert(END, m.items_price[5])
        pri7 = Entry(admin_window, width=15)
        pri7.grid(row=8, column=5)
        pri7.insert(END, m.items_price[6])
        pri8 = Entry(admin_window, width=15)
        pri8.grid(row=9, column=5)
        pri8.insert(END, m.items_price[7])
        pri9 = Entry(admin_window, width=15)
        pri9.grid(row=10, column=5)
        pri9.insert(END, m.items_price[8])
        pri10 = Entry(admin_window, width=15)
        pri10.grid(row=11, column=5)
        pri10.insert(END, m.items_price[9])
        pri11 = Entry(admin_window, width=15)
        pri11.grid(row=12, column=5)
        pri11.insert(END, m.items_price[10])
        pri12 = Entry(admin_window, width=15)
        pri12.grid(row=13, column=5)
        pri12.insert(END, m.items_price[11])
        pri13 = Entry(admin_window, width=15)
        pri13.grid(row=14, column=5)
        pri13.insert(END, m.items_price[12])
        pri14 = Entry(admin_window, width=15)
        pri14.grid(row=15, column=5)
        pri14.insert(END, m.items_price[13])
        pri15 = Entry(admin_window, width=15)
        pri15.grid(row=16, column=5)
        pri15.insert(END, m.items_price[14])
        pri16 = Entry(admin_window, width=15)
        pri16.grid(row=17, column=5)
        pri16.insert(END, m.items_price[15])
        pri17 = Entry(admin_window, width=15)
        pri17.grid(row=18, column=5)
        pri17.insert(END, m.items_price[16])
        pri18 = Entry(admin_window, width=15)
        pri18.grid(row=19, column=5)
        pri18.insert(END, m.items_price[17])
        pri19 = Entry(admin_window, width=15)
        pri19.grid(row=20, column=5)
        pri19.insert(END, m.items_price[18])
        pri20 = Entry(admin_window, width=15)
        pri20.grid(row=21, column=5)
        pri20.insert(END, m.items_price[19])
        pri21 = Entry(admin_window, width=15)
        pri21.grid(row=22, column=5)
        pri21.insert(END, m.items_price[20])
        pri22 = Entry(admin_window, width=15)
        pri22.grid(row=23, column=5)
        pri22.insert(END, m.items_price[21])
        pri23 = Entry(admin_window, width=15)
        pri23.grid(row=24, column=5)
        pri23.insert(END, m.items_price[22])
        pri24 = Entry(admin_window, width=15)
        pri24.grid(row=25, column=5)
        pri24.insert(END, m.items_price[23])
        pri25 = Entry(admin_window, width=15)
        pri25.grid(row=26, column=5)
        pri25.insert(END, m.items_price[24])
        pri26 = Entry(admin_window, width=15)
        pri26.grid(row=27, column=5)
        pri26.insert(END, m.items_price[25])
        pri27 = Entry(admin_window, width=15)
        pri27.grid(row=28, column=5)
        pri27.insert(END, m.items_price[26])
        pri28 = Entry(admin_window, width=15)
        pri28.grid(row=29, column=5)
        pri28.insert(END, m.items_price[27])
        pri29 = Entry(admin_window, width=15)
        pri29.grid(row=30, column=5)
        pri29.insert(END, m.items_price[28])
        pri30 = Entry(admin_window, width=15)
        pri30.grid(row=31, column=5)
        pri30.insert(END, m.items_price[29])
        def act_price(index,value):
            m.change_price(index,value)
            draw_price()
        conf_column=6
        conf1 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(0, pri1.get())))
        conf1.grid(row=2, column=conf_column)
        conf2 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(1, pri2.get())))
        conf2.grid(row=3, column=conf_column)
        conf3 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(2, pri3.get())))
        conf3.grid(row=4, column=conf_column)
        conf4 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(3, pri4.get())))
        conf4.grid(row=5, column=conf_column)
        conf5 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(4, pri5.get())))
        conf5.grid(row=6, column=conf_column)
        conf6 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(5, pri6.get())))
        conf6.grid(row=7, column=conf_column)
        conf7 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(6, pri7.get())))
        conf7.grid(row=8, column=conf_column)
        conf8 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(7, pri8.get())))
        conf8.grid(row=9, column=conf_column)
        conf9 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(8, pri9.get())))
        conf9.grid(row=10, column=conf_column)
        conf10 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(9, pri10.get())))
        conf10.grid(row=11, column=conf_column)
        conf11 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(10, pri11.get())))
        conf11.grid(row=12, column=conf_column)
        conf12 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(11, pri12.get())))
        conf12.grid(row=13, column=conf_column)
        conf13 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(12, pri13.get())))
        conf13.grid(row=14, column=conf_column)
        conf14 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(13, pri14.get())))
        conf14.grid(row=15, column=conf_column)
        conf15 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(14, pri15.get())))
        conf15.grid(row=16, column=conf_column)
        conf16 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(15, pri16.get())))
        conf16.grid(row=17, column=conf_column)
        conf17 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(16, pri17.get())))
        conf17.grid(row=18, column=conf_column)
        conf18 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(17, pri18.get())))
        conf18.grid(row=19, column=conf_column)
        conf19 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(18, pri19.get())))
        conf19.grid(row=20, column=conf_column)
        conf20 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(19, pri20.get())))
        conf20.grid(row=21, column=conf_column)
        conf21 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(20, pri21.get())))
        conf21.grid(row=22, column=conf_column)
        conf22 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(21, pri22.get())))
        conf22.grid(row=23, column=conf_column)
        conf23 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(22, pri23.get())))
        conf23.grid(row=24, column=conf_column)
        conf24 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(23, pri24.get())))
        conf24.grid(row=25, column=conf_column)
        conf25 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(24, pri25.get())))
        conf25.grid(row=26, column=conf_column)
        conf26 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(25, pri26.get())))
        conf26.grid(row=27, column=conf_column)
        conf27 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(26, pri27.get())))
        conf27.grid(row=28, column=conf_column)
        conf28 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(27, pri28.get())))
        conf28.grid(row=29, column=conf_column)
        conf29 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(28, pri29.get())))
        conf29.grid(row=30, column=conf_column)
        conf30 = Button(admin_window, text="변경", width=5, height=1, command=lambda: (act_price(29, pri30.get())))
        conf30.grid(row=31, column=conf_column)
    adm_draw_price()
    #Counts
    def adm_draw_count():
        cnt1 = Label(admin_window, text=str(m.items_count[0]) + "개", width=15)
        cnt1.grid(row=2, column=7)
        cnt2 = Label(admin_window, text=str(m.items_count[1]) + "개", width=15)
        cnt2.grid(row=3, column=7)
        cnt3 = Label(admin_window, text=str(m.items_count[2]) + "개", width=15)
        cnt3.grid(row=4, column=7)
        cnt4 = Label(admin_window, text=str(m.items_count[3]) + "개", width=15)
        cnt4.grid(row=5, column=7)
        cnt5 = Label(admin_window, text=str(m.items_count[4]) + "개", width=15)
        cnt5.grid(row=6, column=7)
        cnt6 = Label(admin_window, text=str(m.items_count[5]) + "개", width=15)
        cnt6.grid(row=7, column=7)
        cnt7 = Label(admin_window, text=str(m.items_count[6]) + "개", width=15)
        cnt7.grid(row=8, column=7)
        cnt8 = Label(admin_window, text=str(m.items_count[7]) + "개", width=15)
        cnt8.grid(row=9, column=7)
        cnt9 = Label(admin_window, text=str(m.items_count[8]) + "개", width=15)
        cnt9.grid(row=10, column=7)
        cnt10 = Label(admin_window, text=str(m.items_count[9]) + "개", width=15)
        cnt10.grid(row=11, column=7)
        cnt11 = Label(admin_window, text=str(m.items_count[10]) + "개", width=15)
        cnt11.grid(row=12, column=7)
        cnt12 = Label(admin_window, text=str(m.items_count[11]) + "개", width=15)
        cnt12.grid(row=13, column=7)
        cnt13 = Label(admin_window, text=str(m.items_count[12]) + "개", width=15)
        cnt13.grid(row=14, column=7)
        cnt14 = Label(admin_window, text=str(m.items_count[13]) + "개", width=15)
        cnt14.grid(row=15, column=7)
        cnt15 = Label(admin_window, text=str(m.items_count[14]) + "개", width=15)
        cnt15.grid(row=16, column=7)
        cnt16 = Label(admin_window, text=str(m.items_count[15]) + "개", width=15)
        cnt16.grid(row=17, column=7)
        cnt17 = Label(admin_window, text=str(m.items_count[16]) + "개", width=15)
        cnt17.grid(row=18, column=7)
        cnt18 = Label(admin_window, text=str(m.items_count[17]) + "개", width=15)
        cnt18.grid(row=19, column=7)
        cnt19 = Label(admin_window, text=str(m.items_count[18]) + "개", width=15)
        cnt19.grid(row=20, column=7)
        cnt20 = Label(admin_window, text=str(m.items_count[19]) + "개", width=15)
        cnt20.grid(row=21, column=7)
        cnt21 = Label(admin_window, text=str(m.items_count[20]) + "개", width=15)
        cnt21.grid(row=22, column=7)
        cnt22 = Label(admin_window, text=str(m.items_count[21]) + "개", width=15)
        cnt22.grid(row=23, column=7)
        cnt23 = Label(admin_window, text=str(m.items_count[22]) + "개", width=15)
        cnt23.grid(row=24, column=7)
        cnt24 = Label(admin_window, text=str(m.items_count[23]) + "개", width=15)
        cnt24.grid(row=25, column=7)
        cnt25 = Label(admin_window, text=str(m.items_count[24]) + "개", width=15)
        cnt25.grid(row=26, column=7)
        cnt26 = Label(admin_window, text=str(m.items_count[25]) + "개", width=15)
        cnt26.grid(row=27, column=7)
        cnt27 = Label(admin_window, text=str(m.items_count[26]) + "개", width=15)
        cnt27.grid(row=28, column=7)
        cnt28 = Label(admin_window, text=str(m.items_count[27]) + "개", width=15)
        cnt28.grid(row=29, column=7)
        cnt29 = Label(admin_window, text=str(m.items_count[28]) + "개", width=15)
        cnt29.grid(row=30, column=7)
        cnt30 = Label(admin_window, text=str(m.items_count[29]) + "개", width=15)
        cnt30.grid(row=31, column=7)
    def adm_count_actions():
        def act_up(index):
            m.change_count(index,1)
            adm_draw_count()
        up_column=8
        up1 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(0)))
        up1.grid(row=2, column=up_column)
        up2 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(1)))
        up2.grid(row=3, column=up_column)
        up3 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(2)))
        up3.grid(row=4, column=up_column)
        up4 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(3)))
        up4.grid(row=5, column=up_column)
        up5 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(4)))
        up5.grid(row=6, column=up_column)
        up6 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(5)))
        up6.grid(row=7, column=up_column)
        up7 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(6)))
        up7.grid(row=8, column=up_column)
        up8 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(7)))
        up8.grid(row=9, column=up_column)
        up9 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(8)))
        up9.grid(row=10, column=up_column)
        up10 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(9)))
        up10.grid(row=11, column=up_column)
        up11 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(10)))
        up11.grid(row=12, column=up_column)
        up12 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(11)))
        up12.grid(row=13, column=up_column)
        up13 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(12)))
        up13.grid(row=14, column=up_column)
        up14 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(13)))
        up14.grid(row=15, column=up_column)
        up15 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(14)))
        up15.grid(row=16, column=up_column)
        up16 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(15)))
        up16.grid(row=17, column=up_column)
        up17 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(16)))
        up17.grid(row=18, column=up_column)
        up18 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(17)))
        up18.grid(row=19, column=up_column)
        up19 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(18)))
        up19.grid(row=20, column=up_column)
        up20 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(19)))
        up20.grid(row=21, column=up_column)
        up21 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(20)))
        up21.grid(row=22, column=up_column)
        up22 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(21)))
        up22.grid(row=23, column=up_column)
        up23 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(22)))
        up23.grid(row=24, column=up_column)
        up24 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(23)))
        up24.grid(row=25, column=up_column)
        up25 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(24)))
        up25.grid(row=26, column=up_column)
        up26 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(25)))
        up26.grid(row=27, column=up_column)
        up27 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(26)))
        up27.grid(row=28, column=up_column)
        up28 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(27)))
        up28.grid(row=29, column=up_column)
        up29 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(28)))
        up29.grid(row=30, column=up_column)
        up30 = Button(admin_window, text="+1개", width=5, height=1, command=lambda: (act_up(29)))
        up30.grid(row=31, column=up_column)
        def act_down(index):
            m.change_count(index,-1)
            adm_draw_count()
        down_column=9
        down1 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(0)))
        down1.grid(row=2, column=down_column)
        down2 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(1)))
        down2.grid(row=3, column=down_column)
        down3 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(2)))
        down3.grid(row=4, column=down_column)
        down4 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(3)))
        down4.grid(row=5, column=down_column)
        down5 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(4)))
        down5.grid(row=6, column=down_column)
        down6 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(5)))
        down6.grid(row=7, column=down_column)
        down7 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(6)))
        down7.grid(row=8, column=down_column)
        down8 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(7)))
        down8.grid(row=9, column=down_column)
        down9 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(8)))
        down9.grid(row=10, column=down_column)
        down10 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(9)))
        down10.grid(row=11, column=down_column)
        down11 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(10)))
        down11.grid(row=12, column=down_column)
        down12 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(11)))
        down12.grid(row=13, column=down_column)
        down13 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(12)))
        down13.grid(row=14, column=down_column)
        down14 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(13)))
        down14.grid(row=15, column=down_column)
        down15 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(14)))
        down15.grid(row=16, column=down_column)
        down16 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(15)))
        down16.grid(row=17, column=down_column)
        down17 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(16)))
        down17.grid(row=18, column=down_column)
        down18 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(17)))
        down18.grid(row=19, column=down_column)
        down19 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(18)))
        down19.grid(row=20, column=down_column)
        down20 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(19)))
        down20.grid(row=21, column=down_column)
        down21 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(20)))
        down21.grid(row=22, column=down_column)
        down22 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(21)))
        down22.grid(row=23, column=down_column)
        down23 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(22)))
        down23.grid(row=24, column=down_column)
        down24 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(23)))
        down24.grid(row=25, column=down_column)
        down25 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(24)))
        down25.grid(row=26, column=down_column)
        down26 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(25)))
        down26.grid(row=27, column=down_column)
        down27 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(26)))
        down27.grid(row=28, column=down_column)
        down28 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(27)))
        down28.grid(row=29, column=down_column)
        down29 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(28)))
        down29.grid(row=30, column=down_column)
        down30 = Button(admin_window, text="-1개", width=5, height=1, command=lambda: (act_down(29)))
        down30.grid(row=31, column=down_column)
    adm_draw_count()
    adm_count_actions()

    Label(admin_window, text="").grid(row=40, column=0, pady=100)  # 스크롤 끝 여백 추가


####################### 결제 방식 변경
pay_method=False # False -> 현금, True-> 카드
def change_pay_method():
    global pay_method
    if pay_method:
        pay_method = False
        msgbox.showinfo("알림","결제 방식을 현금으로 변경하셨습니다.")
    else:
        pay_method = True
        msgbox.showinfo("알림", "결제 방식을 카드로 변경하셨습니다.")

######################### 메뉴바
menu = Menu(root)
menu_admin = Menu(menu,tearoff=0)
menu_admin.add_command(label = 'Login',command=get_password)
menu.add_cascade(label = '관리자 전용', menu = menu_admin)

menu_pay = Menu(menu,tearoff=0)
menu_pay.add_checkbutton(label='카드로 결제',command=change_pay_method)
menu.add_cascade(label='결제 방식',menu= menu_pay)


###################### 기계 동작하는 부분
def buy(num): #제품번호가 0부터 시작
    if pay_method:
        terms = m.item_out_card(num) #카드결제
    else:
        terms = m.item_out(num) #현금결제
    if terms==2:
        msgbox.showinfo("제품 구입",f"{m.items_list[num]}을 구입하였습니다.\n재고가 {m.items_count[num]}개 남았습니다.")
    elif terms==1:
        msgbox.showwarning("잔액 부족",f"잔액이 부족합니다.")
    else:
        msgbox.showerror("재고 부족",f"재고가 부족합니다.")
    draw_money()

def add_cash(num):
    if cash[num]:
        if num==0:
            m.add_cash(1000)
        elif num==1:
            m.add_cash(500)
        elif num==2:
            m.add_cash(100)
        elif num==3:
            m.add_cash(50)
        cash[num]-=1
        draw_money()

def refund():
    refund_money = m.refund()
    print('환급된 금액: ',refund_money)
    if refund_money == -1:
        msgbox.showerror("알람","기계에 잔돈이 부족합니다.\n시설 관리자에게 문의하십시오.")
        # 기계에 잔돈이 부족합니다. 관리자에게 문의하십시오.
    for i in range(4):
        cash[i] += refund_money[i]
    msgbox.showinfo("환급",f"1000원 {refund_money[0]}개\n500원 {refund_money[1]}개\n100원 {refund_money[2]}개\n50원 {refund_money[3]}개\n을 환급했습니다.")
    draw_money()

def draw_money():
    now_cash = Label(root, text=f'현재 잔액 : {m.get_cash()}원',anchor='w',width=15,height=1)
    now_cash.grid(row=1, column=11)

    user_cash1 = Label(root,text=f'1000원 : {cash[0]}개',anchor='w',width=15,height=1)
    user_cash1.grid(row=2,column=11)
    user_cash2 = Label(root,text=f'500원 : {cash[1]}개',anchor='w',width=15,height=1)
    user_cash2.grid(row=3,column=11)
    user_cash3 = Label(root,text=f'100원 : {cash[2]}개',anchor='w',width=15,height=1)
    user_cash3.grid(row=4,column=11)
    user_cash4 = Label(root,text=f'50원 : {cash[3]}개',anchor='w',width=15,height=1)
    user_cash4.grid(row=5,column=11)

def draw_btn():
    btn_row=[1,3,5]
    btn1 = Button(root, text=m.items_list[0],command=lambda :(buy(0)), width=15,height=1)
    btn1.grid(row=btn_row[0],column=1)
    btn2 = Button(root, text=m.items_list[1],command=lambda :(buy(1)), width=15,height=1)
    btn2.grid(row=btn_row[0],column=2)
    btn3 = Button(root, text=m.items_list[2],command=lambda :(buy(2)), width=15,height=1)
    btn3.grid(row=btn_row[0],column=3)
    btn4 = Button(root, text=m.items_list[3],command=lambda :(buy(3)), width=15,height=1)
    btn4.grid(row=btn_row[0],column=4)
    btn5 = Button(root, text=m.items_list[4],command=lambda :(buy(4)), width=15,height=1)
    btn5.grid(row=btn_row[0],column=5)
    btn6 = Button(root, text=m.items_list[5],command=lambda :(buy(5)), width=15,height=1)
    btn6.grid(row=btn_row[0],column=6)
    btn7 = Button(root, text=m.items_list[6],command=lambda :(buy(6)), width=15,height=1)
    btn7.grid(row=btn_row[0],column=7)
    btn8 = Button(root, text=m.items_list[7],command=lambda :(buy(7)), width=15,height=1)
    btn8.grid(row=btn_row[0],column=8)
    btn9 = Button(root, text=m.items_list[8],command=lambda :(buy(8)), width=15,height=1)
    btn9.grid(row=btn_row[0],column=9)
    btn10 = Button(root, text=m.items_list[9],command=lambda :(buy(9)), width=15,height=1)
    btn10.grid(row=btn_row[0],column=10)
    btn11 = Button(root, text=m.items_list[10],command=lambda :(buy(10)), width=15,height=1)
    btn11.grid(row=btn_row[1],column=1)
    btn12 = Button(root, text=m.items_list[11],command=lambda :(buy(11)), width=15,height=1)
    btn12.grid(row=btn_row[1],column=2)
    btn13 = Button(root, text=m.items_list[12],command=lambda :(buy(12)), width=15,height=1)
    btn13.grid(row=btn_row[1],column=3)
    btn14 = Button(root, text=m.items_list[13],command=lambda :(buy(13)), width=15,height=1)
    btn14.grid(row=btn_row[1],column=4)
    btn15 = Button(root, text=m.items_list[14],command=lambda :(buy(14)), width=15,height=1)
    btn15.grid(row=btn_row[1],column=5)
    btn16 = Button(root, text=m.items_list[15],command=lambda :(buy(15)), width=15,height=1)
    btn16.grid(row=btn_row[1],column=6)
    btn17 = Button(root, text=m.items_list[16],command=lambda :(buy(16)), width=15,height=1)
    btn17.grid(row=btn_row[1],column=7)
    btn18 = Button(root, text=m.items_list[17],command=lambda :(buy(17)), width=15,height=1)
    btn18.grid(row=btn_row[1],column=8)
    btn19 = Button(root, text=m.items_list[18],command=lambda :(buy(18)), width=15,height=1)
    btn19.grid(row=btn_row[1],column=9)
    btn20 = Button(root, text=m.items_list[19],command=lambda :(buy(19)), width=15,height=1)
    btn20.grid(row=btn_row[1],column=10)
    btn21 = Button(root, text=m.items_list[20],command=lambda :(buy(20)), width=15,height=1)
    btn21.grid(row=btn_row[2],column=1)
    btn22 = Button(root, text=m.items_list[21],command=lambda :(buy(21)), width=15,height=1)
    btn22.grid(row=btn_row[2],column=2)
    btn23 = Button(root, text=m.items_list[22],command=lambda :(buy(22)), width=15,height=1)
    btn23.grid(row=btn_row[2],column=3)
    btn24 = Button(root, text=m.items_list[23],command=lambda :(buy(23)), width=15,height=1)
    btn24.grid(row=btn_row[2],column=4)
    btn25 = Button(root, text=m.items_list[24],command=lambda :(buy(24)), width=15,height=1)
    btn25.grid(row=btn_row[2],column=5)
    btn26 = Button(root, text=m.items_list[25],command=lambda :(buy(25)), width=15,height=1)
    btn26.grid(row=btn_row[2],column=6)
    btn27 = Button(root, text=m.items_list[26],command=lambda :(buy(26)), width=15,height=1)
    btn27.grid(row=btn_row[2],column=7)
    btn28 = Button(root, text=m.items_list[27],command=lambda :(buy(27)), width=15,height=1)
    btn28.grid(row=btn_row[2],column=8)
    btn29 = Button(root, text=m.items_list[28],command=lambda :(buy(28)), width=15,height=1)
    btn29.grid(row=btn_row[2],column=9)
    btn30 = Button(root, text=m.items_list[29],command=lambda :(buy(29)), width=15,height=1)
    btn30.grid(row=btn_row[2],column=10)

def draw_price():
    price_row=[2,4,6]
    price1 = Label(root, text=str(m.items_price[0])+"원")
    price1.grid(row=price_row[0], column=1)
    price2 = Label(root, text=str(m.items_price[1])+"원")
    price2.grid(row=price_row[0], column=2)
    price3 = Label(root, text=str(m.items_price[2])+"원")
    price3.grid(row=price_row[0], column=3)
    price4 = Label(root, text=str(m.items_price[3])+"원")
    price4.grid(row=price_row[0], column=4)
    price5 = Label(root, text=str(m.items_price[4])+"원")
    price5.grid(row=price_row[0], column=5)
    price6 = Label(root, text=str(m.items_price[5])+"원")
    price6.grid(row=price_row[0], column=6)
    price7 = Label(root, text=str(m.items_price[6])+"원")
    price7.grid(row=price_row[0], column=7)
    price8 = Label(root, text=str(m.items_price[7])+"원")
    price8.grid(row=price_row[0], column=8)
    price9 = Label(root, text=str(m.items_price[8])+"원")
    price9.grid(row=price_row[0], column=9)
    price10 = Label(root, text=str(m.items_price[9])+"원")
    price10.grid(row=price_row[0], column=10)
    price11 = Label(root, text=str(m.items_price[10])+"원")
    price11.grid(row=price_row[1], column=1)
    price12 = Label(root, text=str(m.items_price[11])+"원")
    price12.grid(row=price_row[1], column=2)
    price13 = Label(root, text=str(m.items_price[12])+"원")
    price13.grid(row=price_row[1], column=3)
    price14 = Label(root, text=str(m.items_price[13])+"원")
    price14.grid(row=price_row[1], column=4)
    price15 = Label(root, text=str(m.items_price[14])+"원")
    price15.grid(row=price_row[1], column=5)
    price16 = Label(root, text=str(m.items_price[15])+"원")
    price16.grid(row=price_row[1], column=6)
    price17 = Label(root, text=str(m.items_price[16])+"원")
    price17.grid(row=price_row[1], column=7)
    price18 = Label(root, text=str(m.items_price[17])+"원")
    price18.grid(row=price_row[1], column=8)
    price19 = Label(root, text=str(m.items_price[18])+"원")
    price19.grid(row=price_row[1], column=9)
    price20 = Label(root, text=str(m.items_price[19])+"원")
    price20.grid(row=price_row[1], column=10)
    price21 = Label(root, text=str(m.items_price[20])+"원")
    price21.grid(row=price_row[2], column=1)
    price22 = Label(root, text=str(m.items_price[21])+"원")
    price22.grid(row=price_row[2], column=2)
    price23 = Label(root, text=str(m.items_price[22])+"원")
    price23.grid(row=price_row[2], column=3)
    price24 = Label(root, text=str(m.items_price[23])+"원")
    price24.grid(row=price_row[2], column=4)
    price25 = Label(root, text=str(m.items_price[24])+"원")
    price25.grid(row=price_row[2], column=5)
    price26 = Label(root, text=str(m.items_price[25])+"원")
    price26.grid(row=price_row[2], column=6)
    price27 = Label(root, text=str(m.items_price[26])+"원")
    price27.grid(row=price_row[2], column=7)
    price28 = Label(root, text=str(m.items_price[27])+"원")
    price28.grid(row=price_row[2], column=8)
    price29 = Label(root, text=str(m.items_price[28])+"원")
    price29.grid(row=price_row[2], column=9)
    price30 = Label(root, text=str(m.items_price[29])+"원")
    price30.grid(row=price_row[2], column=10)

def draw_func():
    ins_row=[8] #insert coin
    ins1 = Button(root, text='1000원 투입',command=lambda :(add_cash(0)),width=10,height=1)
    ins1.grid(row=ins_row[0],column=1)
    ins2 = Button(root, text='500원 투입',command=lambda :(add_cash(1)),width=10,height=1)
    ins2.grid(row=ins_row[0],column=2)
    ins3 = Button(root, text='100원 투입',command=lambda :(add_cash(2)),width=10,height=1)
    ins3.grid(row=ins_row[0],column=3)
    ins4 = Button(root, text='50원 투입',command=lambda :(add_cash(3)),width=10,height=1)
    ins4.grid(row=ins_row[0],column=4)
    ins5 = Button(root, text='환급 받기',command=refund,width=10,height=1)
    ins5.grid(row=ins_row[0],column=5)

    root.grid_rowconfigure(7,minsize=20) #제품 선택과 돈 투입 버튼 분리하기

__init__()
draw_btn()
draw_price()
draw_func()
draw_money()
root.config(menu = menu)
root.mainloop()

#https://blog.naver.com/dsz08082/221420576638